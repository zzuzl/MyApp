<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.zlihj.dao.StaffDao">

    <sql id="column">
        id,
        `name`,
        pid,
        `type`,
        source,
        gender,
        birthday,
        school,
        major,
        phone,
        qq,
        gxtAccount,
        email,
        wx,
        workAddress,
        password
    </sql>

    <insert id="insert" parameterType="cn.zlihj.domain.Staff" keyProperty="id" useGeneratedKeys="true">
        insert into staff(
            `name`,
            pid,
            `type`,
            source,
            gender,
            birthday,
            school,
            major,
            phone,
            qq,
            gxtAccount,
            email,
            wx,
            workAddress,
            password,
            createTime,
            updateTime
        ) values(
            #{name},
            #{pid},
            #{type},
            #{source},
            #{gender},
            #{birthday},
            #{school},
            #{major},
            #{phone},
            #{qq},
            #{gxtAccount},
            #{email},
            #{wx},
            #{workAddress},
            #{password},
            now(),
            now()
        )
    </insert>

    <update id="moveStaff">
        update staff set source=#{source}, pid=#{pid}, updateTime=now() where id=#{id} and source=#{oldSource} and pid=#{oldPid}
    </update>

    <select id="findByEmail" resultType="cn.zlihj.domain.Staff">
        select <include refid="column"/>
        from staff where email=#{email} limit 1
    </select>

    <select id="findById" resultType="cn.zlihj.domain.Staff">
        select <include refid="column"/>
        from staff where id=#{id} limit 1
    </select>

    <select id="pageList" resultType="cn.zlihj.domain.Staff">
        select <include refid="column"/>
        from staff
        where 1=1
        <if test="source != null">
            and source=#{source}
        </if>
        <if test="pid != null">
            and pid=#{pid}
        </if>
        <if test="key != null">
            and name like '%${key}%'
        </if>
        order by id
        limit ${from},${size}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*) as num
        from staff
        where 1=1
        <if test="source != null">
            and source=#{source}
        </if>
        <if test="pid != null">
            and pid=#{pid}
        </if>
        <if test="key != null">
            and name like '%${key}%'
        </if>
    </select>

    <update id="changePassword" >
        update staff set password=#{newPassword}, updateTime=now() where email=#{email} and password=#{newPassword}
    </update>

    <update id="updateInfo" parameterType="cn.zlihj.domain.Staff">
        update staff
        set qq=#{qq},
        gxtAccount=#{gxtAccount},
        phone=#{phone}
        where email=#{email}
    </update>

    <select id="searchAll" resultType="cn.zlihj.domain.SearchVo">
        (select c.id, 2 as type, c.`name` as title from company c where c.`name` like '%${key}%' limit 100)
        union
        (select s.id, 1 as type, s.`name` as title from staff s where s.`name` like '${key}%' limit 100)
        union
        (select p.id, 3 as type, p.`name` as title from project p where p.`name` like '%${key}%' limit 100)
    </select>

    <select id="listVersion" resultType="cn.zlihj.domain.VersionInfo">
        select * from version_config
    </select>

    <select id="findMaxVersion" resultType="cn.zlihj.domain.VersionInfo">
        select * from version_config order by id desc limit 1
    </select>
</mapper>